{"version":3,"file":"component---src-pages-profile-js-549861a3ee4adf2459c1.js","mappings":"4RAMA,MAAMA,EAAuB,cAAiB,EAC5CC,WACAC,UACAC,YAAY,SACZC,OAEAC,GAAIC,EAAY,MAChBC,eACGC,GACFC,KAED,MAAMC,EAAkB,GADxBT,GAAW,QAAmBA,EAAU,cACDE,IACvC,OAAoB,SAAKG,EAAW,CAClCG,IAAKA,KACFD,EACHD,UAAW,IAAWA,EAAWG,EAAiBN,GAAQ,GAAGM,KAAmBN,IAAQF,GAAW,QAAQA,MAC3G,IAEJF,EAAQW,YAAc,UACtB,QCiDA,OAAeC,EAAAA,EAAAA,KAAQC,IAAA,IAAC,KAAEC,GAAMD,EAAA,MAAM,CAAEC,OAAM,GAA9C,EAjEgBC,IAAe,IAAd,KAAED,GAAMC,EACvB,MAAM,EAACJ,EAAY,EAACK,IAAkBC,EAAAA,EAAAA,UAASC,IAAIJ,EAAM,cAAe,MAClE,EAACK,EAAQ,EAACC,IAAcH,EAAAA,EAAAA,WAAS,GAOvC,OANAI,EAAAA,EAAAA,YAAU,KACHP,IACHQ,OAAOC,SAASC,KAAO,IACzB,GACC,CAACV,IAECA,EAKHW,EAAAA,cAACC,EAAAA,EAAS,CAACC,MAAO,CAAEC,SAAU,UAC5BH,EAAAA,cAAA,YACGN,EACCM,EAAAA,cAAA,OAAKI,MAAM,iCACTJ,EAAAA,cAAA,WACAA,EAAAA,cAACzB,EAAO,CAACG,UAAU,SAAS2B,KAAK,UAC/BL,EAAAA,cAAA,QAAMlB,UAAU,mBAAkB,gBAItCkB,EAAAA,cAACM,EAAAA,EAAI,KACHN,EAAAA,cAACM,EAAAA,EAAKC,MAAK,CAACzB,UAAU,QACpBkB,EAAAA,cAACM,EAAAA,EAAKE,MAAK,KAAC,gBACZR,EAAAA,cAACM,EAAAA,EAAKG,QAAO,CACXC,KAAK,OACLC,YAAY,eACZC,MAAO1B,EACP2B,SAAWC,IACT,MAAMC,EAAUD,EAAEE,OAAOJ,MACzBrB,EAAewB,EAAQ,KAI7Bf,EAAAA,cAACiB,EAAAA,EAAM,CACLxC,QAAQ,UACRiC,KAAK,SACLQ,QAAUJ,IACRA,EAAEK,iBACFxB,GAAW,GAEXyB,SACGC,OACAC,YAAYC,cAAc,CAAErC,gBAC5BsC,MAAMC,IACLC,QAAQC,IAAI,YAAa,cAAeF,EAAQ,IAEjDG,OAAM,SACNJ,MAAK,KACJ7B,GAAW,EAAM,GACjB,GAEP,WA7CF,IAmDK,G","sources":["webpack://dark-mists-tools-v2/./node_modules/react-bootstrap/esm/Spinner.js","webpack://dark-mists-tools-v2/./src/pages/profile.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation = 'border',\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","/* eslint-disable no-undef */\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nconst Profile = ({ user }) => {\n  const [displayName, setDisplayName] = useState(get(user, \"displayName\", \"\"));\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (!user) {\n      window.location.href = \"/\";\n    }\n  }, [user]);\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <Container style={{ maxWidth: \"600px\" }}>\n      <main>\n        {loading ? (\n          <div class=\"d-flex justify-content-center\">\n            <br />\n            <Spinner animation=\"border\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </Spinner>\n          </div>\n        ) : (\n          <Form>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Display Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Display Name\"\n                value={displayName}\n                onChange={(e) => {\n                  const newName = e.target.value;\n                  setDisplayName(newName);\n                }}\n              />\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              onClick={(e) => {\n                e.preventDefault();\n                setLoading(true);\n\n                firebase\n                  .auth()\n                  .currentUser.updateProfile({ displayName })\n                  .then((results) => {\n                    console.log(\"%cresults\", \"color:green\", results);\n                  })\n                  .catch(() => {})\n                  .then(() => {\n                    setLoading(false);\n                  });\n              }}\n            >\n              Save\n            </Button>\n          </Form>\n        )}\n      </main>\n    </Container>\n  );\n};\n\nexport default connect(({ user }) => ({ user }))(Profile);\n"],"names":["Spinner","bsPrefix","variant","animation","size","as","Component","className","props","ref","bsSpinnerPrefix","displayName","connect","_ref2","user","_ref","setDisplayName","useState","get","loading","setLoading","useEffect","window","location","href","React","Container","style","maxWidth","class","role","Form","Group","Label","Control","type","placeholder","value","onChange","e","newName","target","Button","onClick","preventDefault","firebase","auth","currentUser","updateProfile","then","results","console","log","catch"],"sourceRoot":""}